<?php

namespace App\Http\Middleware;

use App\Helpers\FrontendError;
use Closure;
use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\View;

class VerifyCsrfToken extends Middleware
{
    /**
     * Indicates whether the XSRF-TOKEN cookie should be set on the response.
     *
     * @var bool
     */
    protected $addHttpCookie = true;

    /**
     * The URIs that should be excluded from CSRF verification.
     *
     * @var array
     */
    protected $except = [
        //
    ];
    
    public function handle($request, Closure $next)
    {
        if (!session()->has('app_errors')) {
            session()->put('app_errors', []);
        }

        $errors = session()->get('app_errors', []);
        if (isset($errors['password_reminder'])) unset($errors['password_reminder']);
        if (isset($errors['email_reminder'])) unset($errors['email_reminder']);
        if (Auth::check() && !$request->routeIs('profile', 'login')) {
        
            if (Auth::user()->getAuthPassword() == null) {
                $errors['password_reminder'] = FrontendError::create([
                    'icon' => 'error',
                    'title' => 'Warning',
                    'loaderBg' => '#9EC600',
                    'loader' => true,
                    'description' => 'Password not set. Go to profile to set your password.',
                    'timeout' => '10000',
                    'name' => 'password_reminder',
                ]);
            } elseif (Auth::user()->getAuthPassword() != null && isset($errors['password_reminder'])) {
                unset($errors['password_reminder']);
            }
            
            if (!Auth::user()->email) {
                $errors['email_reminder'] = FrontendError::create([
                    'icon' => 'warning',
                    'title' => 'Warning',
                    'loaderBg' => '#9EC600',
                    'loader' => true,
                    'description' => 'Email not set. Go to profile to set your email address.',
                    'timeout' => '10000',
                    'name' => 'email_reminder',
                ]);
            } elseif (Auth::user()->email && isset($errors['email_reminder'])) {
                unset($errors['email_reminder']);
            }
        }
        session()->put('app_errors', $errors);
        session()->save();
    
        View::share('app_errors', session('errors'));
        
        return parent::handle($request, $next); // TODO: Change the autogenerated stub
    }
}
